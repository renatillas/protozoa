syntax = "proto3";

package example;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";

// User message with well-known types and enums
message User {
  int32 id = 1;
  string name = 2;
  string email = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp last_login = 5;
  bool is_active = 6;
  UserRole role = 7;
  repeated string tags = 8;
  google.protobuf.StringValue bio = 9;
  google.protobuf.Int32Value age = 10;
}

enum UserRole {
  UNKNOWNROLE = 0;
  ADMIN = 1;
  MODERATOR = 2;
  USER = 3;
  GUEST = 4;
}

// Blog post demonstrating nested messages and repeated fields
message BlogPost {
  int32 id = 1;
  string title = 2;
  string content = 3;
  User author = 4;
  google.protobuf.Timestamp published_at = 5;
  repeated string categories = 6;
  repeated Comment comments = 7;
  PostStatus status = 8;
  google.protobuf.Any metadata = 9;
  map<string, string> attributes = 10;
}

// Nested comment message
message Comment {
  int32 id = 1;
  string content = 2;
  User author = 3;
  google.protobuf.Timestamp created_at = 4;
  repeated Comment replies = 5;
}

enum PostStatus {
  DRAFT = 0;
  PUBLISHED = 1;
  ARCHIVED = 2;
  DELETED = 3;
}

// Advanced message demonstrating oneof, optional fields, and well-known types
message AdvancedMessage {
  string id = 1;
  
  // Oneof field
  oneof data {
    string text_data = 2;
    bytes binary_data = 3;
    int64 numeric_data = 4;
    NestedData structured_data = 5;
  }
  
  // Regular fields
  string description = 10;
  bool enabled = 11;
  double score = 12;
  
  // Well-known types
  google.protobuf.Duration timeout = 20;
  google.protobuf.Empty empty_field = 21;
  google.protobuf.Struct config = 22;
  google.protobuf.Value json_value = 23;
  
  // All scalar types
  double double_field = 30;
  float float_field = 31;
  int32 int32_field = 32;
  int64 int64_field = 33;
  uint32 uint32_field = 34;
  uint64 uint64_field = 35;
  sint32 sint32_field = 36;
  sint64 sint64_field = 37;
  fixed32 fixed32_field = 38;
  fixed64 fixed64_field = 39;
  sfixed32 sfixed32_field = 40;
  sfixed64 sfixed64_field = 41;
  bool bool_field = 42;
  string string_field = 43;
  bytes bytes_field = 44;
}

message NestedData {
  string name = 1;
  repeated int32 values = 2;
}