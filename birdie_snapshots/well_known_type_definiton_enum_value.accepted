---
version: 1.4.1
title: Well known type definiton: EnumValue
file: ./test/new_well_known_types_test.gleam
test_name: generate_enumvalue_definition_test
---
pub type EnumValue {
  EnumValue(
    name: String,
    number: Int,
    options: List(Option),
  )
}

pub fn encode_enumvalue(enumvalue: EnumValue) -> BitArray {
  encode.message([
    encode.string_field(1, enumvalue.name),
    encode.int32_field(2, enumvalue.number),
  ])
}

pub fn enumvalue_decoder() -> decode.Decoder(EnumValue) {
  use name <- decode.then(decode.string_with_default(1, ""))
  use number <- decode.then(decode.int32_with_default(2, 0))
  use options <- decode.then(decode.repeated_field(3, fn(_) { Ok([]) }))
  decode.success(EnumValue(
    name: name,
    number: number,
    options: options,
  ))
}
