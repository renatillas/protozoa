---
version: 1.4.0
title: Generate repeated fields
file: ./test/codegen_test.gleam
test_name: generate_repeated_fields_test
---
import gleam/list
import gloto/decode
import gloto/encode



pub type Container {
  Container(
  items: List(String),
  count: Int
  )
}

pub fn encode_container(container: Container) -> BitArray {
  let items_fields = list.map(container.items, fn(v) { encode.string_field(1, v) })
  let other_fields = [
    encode.int32_field(2, container.count)
  ]
  encode.message(list.append(other_fields, list.flatten([items_fields])))
}

pub fn container_decoder() -> decode.Decoder(Container) {
  use items <- decode.subrecord(decode.repeated_string(1))
  use count <- decode.subrecord(decode.int32_with_default(2, 0))
  decode.success(Container(items: items, count: count))
}

pub fn decode_container(data: BitArray) -> Result(Container, decode.DecodeError) {
  decode.decode(data, container_decoder())
}


